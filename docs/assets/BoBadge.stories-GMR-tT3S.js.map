{"version":3,"file":"BoBadge.stories-GMR-tT3S.js","sources":["../../src/components/Badge/BoBadge.vue","../../src/components/Badge/constants.ts"],"sourcesContent":["<template>\n\t<div :class=\"['bo-badge', cssClasses]\">\n\t\t<span v-if=\"$slots['prefix'] != null\">\n\t\t\t<slot name=\"prefix\"></slot>\n\t\t</span>\n\n\t\t<span v-if=\"$slots['body'] != null\">\n\t\t\t<slot name=\"body\"></slot>\n\t\t</span>\n\t\t<span\n\t\t\tclass=\"label\"\n\t\t\tv-if=\"label != null && $slots['body'] == null\"\n\t\t>\n\t\t\t{{ label }}\n\t\t</span>\n\t\t<span v-if=\"$slots['suffix'] != null\">\n\t\t\t<slot name=\"suffix\"></slot>\n\t\t</span>\n\t</div>\n</template>\n\n<script setup lang=\"ts\">\nimport { toRefs, type PropType, computed } from 'vue';\nimport type { OptionalCss } from '@/types';\nimport {\n\tBadgeVariant,\n\tBadgeType,\n\tBadgeSize,\n\tBadgeForm,\n} from '@/components/Badge';\n\nconst props = defineProps({\n\tvariant: {\n\t\ttype: String as PropType<BadgeVariant>,\n\t\tdefault: () => BadgeVariant.Default,\n\t},\n\tform: {\n\t\ttype: String as PropType<BadgeForm>,\n\t\tdefault: () => BadgeForm.Pill,\n\t},\n\ttype: {\n\t\ttype: String as PropType<BadgeType>,\n\t\tdefault: () => BadgeType.Filled,\n\t},\n\tsize: {\n\t\ttype: String as PropType<BadgeSize>,\n\t\tdefault: () => BadgeSize.SM,\n\t},\n\tlabel: {\n\t\ttype: String,\n\t\trequired: false,\n\t},\n});\n\nconst { variant, form, type, size, label } = toRefs(props);\n\nconst cssClasses = computed<OptionalCss>(() => {\n\tconst classes: OptionalCss = {};\n\n\tswitch (variant.value) {\n\t\tcase BadgeVariant.Default:\n\t\t\tclasses['default'] = true;\n\t\t\tbreak;\n\t\tcase BadgeVariant.Info:\n\t\t\tclasses['info'] = true;\n\t\t\tbreak;\n\t\tcase BadgeVariant.Success:\n\t\t\tclasses['success'] = true;\n\t\t\tbreak;\n\t\tcase BadgeVariant.Warning:\n\t\t\tclasses['warning'] = true;\n\t\t\tbreak;\n\t\tcase BadgeVariant.Danger:\n\t\t\tclasses['danger'] = true;\n\t\t\tbreak;\n\t\tcase BadgeVariant.Tertiary:\n\t\t\tclasses['tertiary'] = true;\n\t\t\tbreak;\n\t}\n\n\tswitch (form.value) {\n\t\tcase BadgeForm.Square:\n\t\t\tclasses['square'] = true;\n\t\t\tbreak;\n\t\tcase BadgeForm.Circle:\n\t\t\tclasses['circle'] = true;\n\t\t\tbreak;\n\t\tcase BadgeForm.Pill:\n\t\t\tclasses['pill'] = true;\n\t\t\tbreak;\n\t}\n\n\tswitch (type.value) {\n\t\tcase BadgeType.Filled:\n\t\t\tclasses['filled'] = true;\n\t\t\tbreak;\n\t\tcase BadgeType.Outline:\n\t\t\tclasses['outline'] = true;\n\t\t\tbreak;\n\t}\n\n\tswitch (type.value) {\n\t\tcase BadgeType.Filled:\n\t\t\tclasses['filled'] = true;\n\t\t\tbreak;\n\t\tcase BadgeType.Outline:\n\t\t\tclasses['outline'] = true;\n\t\t\tbreak;\n\t}\n\n\tswitch (size.value) {\n\t\tcase BadgeSize.XS:\n\t\t\tclasses['xs'] = true;\n\t\t\tbreak;\n\t\tcase BadgeSize.SM:\n\t\t\tclasses['sm'] = true;\n\t\t\tbreak;\n\t\tcase BadgeSize.MD:\n\t\t\tclasses['md'] = true;\n\t\t\tbreak;\n\t\tcase BadgeSize.LG:\n\t\t\tclasses['lg'] = true;\n\t\t\tbreak;\n\t\tcase BadgeSize.XL:\n\t\t\tclasses['xl'] = true;\n\t\t\tbreak;\n\t}\n\n\treturn classes;\n});\n</script>\n\n<style scoped lang=\"scss\">\n@import './badge.scss';\n</style>\n","export enum BadgeVariant {\n\tDefault = 'default',\n\tInfo = 'info',\n\tTertiary = 'tertiary',\n\tSuccess = 'success',\n\tWarning = 'warning',\n\tDanger = 'danger',\n}\n\nexport enum BadgeForm {\n\tSquare = 'square',\n\tPill = 'pill',\n\tCircle = 'circle',\n}\n\nexport enum BadgeType {\n\tFilled = 'filled',\n\tOutline = 'outline',\n}\n\nexport enum BadgeSize {\n\tXS = 'xs',\n\tSM = 'sm',\n\tMD = 'md',\n\tLG = 'lg',\n\tXL = 'xl',\n}\n"],"names":["props","__props","variant","form","type","size","label","toRefs","cssClasses","computed","classes","BadgeVariant","BadgeForm","BadgeType","BadgeSize"],"mappings":"shBA+BA,MAAMA,EAAQC,EAuBR,CAAE,QAAAC,EAAS,KAAAC,EAAM,KAAAC,EAAM,KAAAC,EAAM,MAAAC,CAAM,EAAIC,EAAOP,CAAK,EAEnDQ,EAAaC,EAAsB,IAAM,CAC9C,MAAMC,EAAuB,CAAA,EAE7B,OAAQR,EAAQ,MAAO,CACtB,KAAKS,EAAa,QACjBD,EAAQ,QAAa,GACrB,MACD,KAAKC,EAAa,KACjBD,EAAQ,KAAU,GAClB,MACD,KAAKC,EAAa,QACjBD,EAAQ,QAAa,GACrB,MACD,KAAKC,EAAa,QACjBD,EAAQ,QAAa,GACrB,MACD,KAAKC,EAAa,OACjBD,EAAQ,OAAY,GACpB,MACD,KAAKC,EAAa,SACjBD,EAAQ,SAAc,GACtB,KACF,CAEA,OAAQP,EAAK,MAAO,CACnB,KAAKS,EAAU,OACdF,EAAQ,OAAY,GACpB,MACD,KAAKE,EAAU,OACdF,EAAQ,OAAY,GACpB,MACD,KAAKE,EAAU,KACdF,EAAQ,KAAU,GAClB,KACF,CAEA,OAAQN,EAAK,MAAO,CACnB,KAAKS,EAAU,OACdH,EAAQ,OAAY,GACpB,MACD,KAAKG,EAAU,QACdH,EAAQ,QAAa,GACrB,KACF,CAEA,OAAQN,EAAK,MAAO,CACnB,KAAKS,EAAU,OACdH,EAAQ,OAAY,GACpB,MACD,KAAKG,EAAU,QACdH,EAAQ,QAAa,GACrB,KACF,CAEA,OAAQL,EAAK,MAAO,CACnB,KAAKS,EAAU,GACdJ,EAAQ,GAAQ,GAChB,MACD,KAAKI,EAAU,GACdJ,EAAQ,GAAQ,GAChB,MACD,KAAKI,EAAU,GACdJ,EAAQ,GAAQ,GAChB,MACD,KAAKI,EAAU,GACdJ,EAAQ,GAAQ,GAChB,MACD,KAAKI,EAAU,GACdJ,EAAQ,GAAQ,GAChB,KACF,CAEO,OAAAA,CAAA,CACP,8jCCjIW,IAAAC,GAAAA,IACXA,EAAA,QAAU,UACVA,EAAA,KAAO,OACPA,EAAA,SAAW,WACXA,EAAA,QAAU,UACVA,EAAA,QAAU,UACVA,EAAA,OAAS,SANEA,IAAAA,GAAA,CAAA,CAAA,EASAC,GAAAA,IACXA,EAAA,OAAS,SACTA,EAAA,KAAO,OACPA,EAAA,OAAS,SAHEA,IAAAA,GAAA,CAAA,CAAA,EAMAC,GAAAA,IACXA,EAAA,OAAS,SACTA,EAAA,QAAU,UAFCA,IAAAA,GAAA,CAAA,CAAA,EAKAC,GAAAA,IACXA,EAAA,GAAK,KACLA,EAAA,GAAK,KACLA,EAAA,GAAK,KACLA,EAAA,GAAK,KACLA,EAAA,GAAK,KALMA,IAAAA,GAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}