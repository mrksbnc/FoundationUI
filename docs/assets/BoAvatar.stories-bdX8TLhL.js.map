{"version":3,"file":"BoAvatar.stories-bdX8TLhL.js","sources":["../../src/assets/img/avatar.png","../../src/components/Avatar/BoAvatar.vue","../../src/components/Avatar/constants.ts"],"sourcesContent":["export default \"__VITE_ASSET__5L2j2eb8__\"","<template>\n\t<div class=\"bo-avatar__container\">\n\t\t<img\n\t\t\tv-if=\"type === AvatarType.Image\"\n\t\t\talt=\"Avatar\"\n\t\t\t:src=\"avatarSrc\"\n\t\t\t:class=\"['bo-avatar', avatarClasses]\"\n\t\t/>\n\t\t<div\n\t\t\tv-if=\"type === AvatarType.Initial && initial !== null\"\n\t\t\t:style=\"initialStyle\"\n\t\t\t:class=\"['bo-avatar', avatarClasses]\"\n\t\t>\n\t\t\t<span> {{ initial }} </span>\n\t\t</div>\n\t\t<span\n\t\t\tv-if=\"showIndicator\"\n\t\t\t:style=\"indicatorStyle\"\n\t\t\t:class=\"['indicator', indicatorClasses]\"\n\t\t/>\n\t</div>\n</template>\n\n<script setup lang=\"ts\">\nimport avatarPlaceholder from '@/assets/img/avatar.png';\nimport { toRefs, type PropType, computed } from 'vue';\nimport {\n\tAvatarSize,\n\tAvatarType,\n\tAvatarVariant,\n\tAvatarIndicatorPosition,\n\ttype AvatarIndicatorProps,\n} from '@/components/Avatar';\nimport type { CssStyle, OptionalCss } from '@/types';\nimport type { AvatarInitialProps } from './types';\n\nconst props = defineProps({\n\tsrc: {\n\t\ttype: String,\n\t\tdefault: null,\n\t},\n\tinitial: {\n\t\ttype: String,\n\t\tdefault: null,\n\t},\n\ttype: {\n\t\ttype: String as PropType<AvatarType>,\n\t\tdefault: () => AvatarType.Image,\n\t},\n\tvariant: {\n\t\ttype: String as PropType<AvatarVariant>,\n\t\tdefault: () => AvatarVariant.Rounded,\n\t},\n\tsize: {\n\t\ttype: String as PropType<AvatarSize>,\n\t\tdefault: () => AvatarSize.MD,\n\t},\n\tindicatorProps: {\n\t\ttype: Object as PropType<AvatarIndicatorProps>,\n\t\tdefault: () => null,\n\t},\n\tinitialProps: {\n\t\ttype: Object as PropType<AvatarInitialProps>,\n\t\tdefault: () => null,\n\t},\n});\n\nconst { src, initial, type, variant, size, indicatorProps, initialProps } =\n\ttoRefs(props);\n\nconst avatarSrc = computed<string>(() => {\n\treturn src.value ?? avatarPlaceholder;\n});\n\nconst avatarClasses = computed<OptionalCss>(() => {\n\tconst classes: OptionalCss = {};\n\n\tswitch (type.value) {\n\t\tcase AvatarType.Image:\n\t\t\tclasses['image'] = true;\n\t\t\tbreak;\n\t\tcase AvatarType.Initial:\n\t\t\tclasses['initial'] = true;\n\t\t\tbreak;\n\t}\n\n\tswitch (variant.value) {\n\t\tcase AvatarVariant.Rounded:\n\t\t\tclasses['rounded'] = true;\n\t\t\tbreak;\n\t\tcase AvatarVariant.Square:\n\t\t\tclasses['square'] = true;\n\t\t\tbreak;\n\t}\n\n\tswitch (size.value) {\n\t\tcase AvatarSize.XS:\n\t\t\tclasses['xs'] = true;\n\t\t\tbreak;\n\t\tcase AvatarSize.SM:\n\t\t\tclasses['sm'] = true;\n\t\t\tbreak;\n\t\tcase AvatarSize.MD:\n\t\t\tclasses['md'] = true;\n\t\t\tbreak;\n\t\tcase AvatarSize.LG:\n\t\t\tclasses['lg'] = true;\n\t\t\tbreak;\n\t\tcase AvatarSize.XL:\n\t\t\tclasses['xl'] = true;\n\t\t\tbreak;\n\t}\n\n\treturn classes;\n});\n\nconst showIndicator = computed<boolean>(() => {\n\treturn indicatorProps.value != null;\n});\n\nconst indicatorStyle = computed<CssStyle>(() => {\n\treturn {\n\t\tbackground: indicatorProps.value?.color ?? 'var(--black)',\n\t};\n});\n\nconst initialStyle = computed<CssStyle>(() => {\n\treturn {\n\t\t'background-color':\n\t\t\tinitialProps.value?.backgroundColor ?? 'var(--gray-300)',\n\t\tcolor: initialProps?.value?.fontColor ?? 'var(--gray-800)',\n\t};\n});\n\nconst indicatorClasses = computed<OptionalCss>(() => {\n\tconst classes: OptionalCss = {};\n\n\tif (indicatorProps.value != null) {\n\t\tswitch (indicatorProps.value.position) {\n\t\t\tcase AvatarIndicatorPosition.Bottom:\n\t\t\t\tclasses['bottom'] = true;\n\t\t\t\tbreak;\n\t\t\tcase AvatarIndicatorPosition.Top:\n\t\t\tdefault:\n\t\t\t\tclasses['top'] = true;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn classes;\n});\n</script>\n\n<style scoped lang=\"scss\">\n@import './avatar.scss';\n</style>\n","export enum AvatarType {\n\tImage = 'image',\n\tInitial = 'initial',\n}\n\nexport enum AvatarVariant {\n\tRounded = 'rounded',\n\tSquare = 'square',\n\tFlat = 'flat',\n}\n\nexport enum AvatarSize {\n\tXS = 'xs',\n\tSM = 'sm',\n\tMD = 'md',\n\tLG = 'lg',\n\tXL = 'xl',\n}\n\nexport enum AvatarIndicatorPosition {\n\tTop = 'top',\n\tBottom = 'bottom',\n}\n"],"names":["avatarPlaceholder","props","__props","src","initial","type","variant","size","indicatorProps","initialProps","toRefs","avatarSrc","computed","avatarClasses","classes","AvatarType","AvatarVariant","AvatarSize","showIndicator","indicatorStyle","_a","initialStyle","_b","indicatorClasses","AvatarIndicatorPosition"],"mappings":"6KAAA,MAAeA,GAAA,GAAA,IAAA,IAAA,sBAAA,YAAA,GAAA,EAAA,6WCoCf,MAAMC,EAAQC,EA+BR,CAAE,IAAAC,EAAK,QAAAC,EAAS,KAAAC,EAAM,QAAAC,EAAS,KAAAC,EAAM,eAAAC,EAAgB,aAAAC,CAAA,EAC1DC,EAAOT,CAAK,EAEPU,EAAYC,EAAiB,IAC3BT,EAAI,OAASH,EACpB,EAEKa,EAAgBD,EAAsB,IAAM,CACjD,MAAME,EAAuB,CAAA,EAE7B,OAAQT,EAAK,MAAO,CACnB,KAAKU,EAAW,MACfD,EAAQ,MAAW,GACnB,MACD,KAAKC,EAAW,QACfD,EAAQ,QAAa,GACrB,KACF,CAEA,OAAQR,EAAQ,MAAO,CACtB,KAAKU,EAAc,QAClBF,EAAQ,QAAa,GACrB,MACD,KAAKE,EAAc,OAClBF,EAAQ,OAAY,GACpB,KACF,CAEA,OAAQP,EAAK,MAAO,CACnB,KAAKU,EAAW,GACfH,EAAQ,GAAQ,GAChB,MACD,KAAKG,EAAW,GACfH,EAAQ,GAAQ,GAChB,MACD,KAAKG,EAAW,GACfH,EAAQ,GAAQ,GAChB,MACD,KAAKG,EAAW,GACfH,EAAQ,GAAQ,GAChB,MACD,KAAKG,EAAW,GACfH,EAAQ,GAAQ,GAChB,KACF,CAEO,OAAAA,CAAA,CACP,EAEKI,EAAgBN,EAAkB,IAChCJ,EAAe,OAAS,IAC/B,EAEKW,EAAiBP,EAAmB,IAAM,OACxC,MAAA,CACN,aAAYQ,EAAAZ,EAAe,QAAf,YAAAY,EAAsB,QAAS,cAAA,CAC5C,CACA,EAEKC,EAAeT,EAAmB,IAAM,SACtC,MAAA,CACN,qBACCQ,EAAAX,EAAa,QAAb,YAAAW,EAAoB,kBAAmB,kBACxC,QAAOE,EAAAb,GAAA,YAAAA,EAAc,QAAd,YAAAa,EAAqB,YAAa,iBAAA,CAC1C,CACA,EAEKC,EAAmBX,EAAsB,IAAM,CACpD,MAAME,EAAuB,CAAA,EAEzB,GAAAN,EAAe,OAAS,KACnB,OAAAA,EAAe,MAAM,SAAU,CACtC,KAAKgB,EAAwB,OAC5BV,EAAQ,OAAY,GACpB,MACD,KAAKU,EAAwB,IAC7B,QACCV,EAAQ,IAAS,GACjB,KACF,CAGM,OAAAA,CAAA,CACP,2tCCtJW,IAAAC,GAAAA,IACXA,EAAA,MAAQ,QACRA,EAAA,QAAU,UAFCA,IAAAA,GAAA,CAAA,CAAA,EAKAC,GAAAA,IACXA,EAAA,QAAU,UACVA,EAAA,OAAS,SACTA,EAAA,KAAO,OAHIA,IAAAA,GAAA,CAAA,CAAA,EAMAC,GAAAA,IACXA,EAAA,GAAK,KACLA,EAAA,GAAK,KACLA,EAAA,GAAK,KACLA,EAAA,GAAK,KACLA,EAAA,GAAK,KALMA,IAAAA,GAAA,CAAA,CAAA,EAQAO,GAAAA,IACXA,EAAA,IAAM,MACNA,EAAA,OAAS,SAFEA,IAAAA,GAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}